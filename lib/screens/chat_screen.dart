import 'package:flutter/material.dart';
import '../services/chat_service.dart';
import '../models/chat.dart';
import 'single_chat_screen.dart';
import 'user_search_screen.dart';

class ChatScreen extends StatefulWidget {
  @override
  _ChatScreenState createState() => _ChatScreenState();
}

class _ChatScreenState extends State<ChatScreen> {
  List<Chat> _chats = [];
  bool _isLoading = true;

  @override
  void initState() {
    super.initState();
    _loadChats();
  }

  void _loadChats() async {
    setState(() => _isLoading = true);
    try {
      final chats = await ChatService.getUserChats();
      setState(() {
        _chats = chats;
        _isLoading = false;
      });
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–æ–≤: $e');
      setState(() => _isLoading = false);
    }
  }

  // –§–ò–ö–°: –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ß–ê–¢–ê
  void _createTestChat() async {
    try {
      await ChatService.createTestChat();
      _loadChats(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç —Å–æ–∑–¥–∞–Ω!'),
          backgroundColor: Colors.green,
        ),
      );
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('‚ùå –û—à–∏–±–∫–∞: $e'),
          backgroundColor: Colors.red,
        ),
      );
    }
  }

  // –§–ò–ö–°: –û–¢–ö–†–´–¢–ò–ï –ß–ê–¢–ê
  void _openChat(Chat chat) {
    print('üü¢ –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç: ${chat.id}');
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =>
            SingleChatScreen(chatId: chat.id, chatName: chat.name),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('–ß–∞—Ç—ã'),
        actions: [
          IconButton(
            icon: Icon(Icons.add),
            onPressed: _createTestChat, // –§–ò–ö–°: –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞
            tooltip: '–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç',
          ),
          IconButton(
            icon: Icon(Icons.refresh),
            onPressed: _loadChats,
          ),
        ],
      ),
      body: _isLoading
          ? Center(child: CircularProgressIndicator())
          : _chats.isEmpty
              ? Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text('–ù–µ—Ç —á–∞—Ç–æ–≤'),
                      SizedBox(height: 10),
                      ElevatedButton(
                        onPressed: _createTestChat,
                        child: Text('–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç'),
                      ),
                    ],
                  ),
                )
              : ListView.builder(
                  itemCount: _chats.length,
                  itemBuilder: (context, index) {
                    final chat = _chats[index];
                    return ListTile(
                      leading: CircleAvatar(
                        backgroundColor: Colors.red,
                        child: Text(
                          chat.name[0],
                          style: TextStyle(color: Colors.white),
                        ),
                      ),
                      title: Text(chat.name),
                      subtitle: Text(chat.lastMessage ?? '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π'),
                      trailing: Icon(Icons.arrow_forward),
                      onTap: () => _openChat(chat), // –§–ò–ö–°: –æ—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞
                    );
                  },
                ),
    );
  }
}
